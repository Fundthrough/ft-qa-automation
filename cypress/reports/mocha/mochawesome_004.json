{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-04-18T19:34:01.863Z",
    "end": "2022-04-18T19:34:21.937Z",
    "duration": 20074,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1cf83e4b-61de-466a-a3f0-09c594125d26",
      "title": "",
      "fullFile": "cypress/integration/nebula/TC05_start.business.js",
      "file": "cypress/integration/nebula/TC05_start.business.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "94e7b87e-14af-4a64-9057-13b4ec52713c",
          "title": "Tell us about your business",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate the start business process",
              "fullTitle": "Tell us about your business Validate the start business process",
              "timedOut": null,
              "duration": 4357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.login(this.user.username, this.user.password)\nvar signinElements = new _SigninElements[\"default\"]();\nfunction uploadBusinessFiles() {\n  signinElements.customerPage.getforwardbutton().click();\n  signinElements.customerPage.uploadfiles().attachFile('example.json', {\n    subjectType: 'drag-n-drop'\n  }); //Validate Error Message\n  cy.get('.message').then(function ($m) {\n    expect($m).to.have[\"class\"]('ui icon message error');\n    expect($m).to.have.text('There was an error uploading the file. Please ensure the file is a .pdf, .jpg, .png, or other image file and try again.');\n    expect($m).to.have.css('background-color', 'rgb(255, 232, 230)');\n  }).then(function ($el) {\n    signinElements.customerPage.uploadfiles().attachFile('testPicture.png', {\n      subjectType: 'drag-n-drop'\n    }); //Validate Success Message\n    cy.waitUntil(function () {\n      return signinElements.customerPage.getsuccessmessage().invoke('text').then(function (text) {\n        expect(text).to.equals('Got it!');\n      });\n    });\n    signinElements.customerPage.getforwardbutton().click().then(function ($el) {\n      signinElements.customerPage.uploadfiles().attachFile('example.json', {\n        subjectType: 'drag-n-drop'\n      }); //Validate error message\n      cy.get('.message').then(function ($m) {\n        expect($m).to.have[\"class\"]('ui icon message error');\n        expect($m).to.have.text('There was an error uploading the file. Please ensure the file is a .pdf, .jpg, .png, or other image file and try again.');\n        expect($m).to.have.css('background-color', 'rgb(255, 232, 230)');\n      }).then(function ($el) {\n        signinElements.customerPage.uploadfiles().attachFile('testPicture.png', {\n          subjectType: 'drag-n-drop'\n        }); //Validate Success Message\n        signinElements.customerPage.getsuccessmessage().invoke('text').then(function (text) {\n          expect(text).to.equals('Got it!');\n        });\n        signinElements.customerPage.getforwardbutton().click().then(function ($el) {\n          signinElements.customerPage.uploadfiles().attachFile('example.json', {\n            subjectType: 'drag-n-drop'\n          }); //Validate error message\n          cy.get('.message').then(function ($m) {\n            expect($m).to.have[\"class\"]('ui icon message error');\n            expect($m).to.have.text('There was an error uploading the file. Please ensure the file is a .pdf, .jpg, .png, or other image file and try again.');\n            expect($m).to.have.css('background-color', 'rgb(255, 232, 230)');\n          }).then(function ($el) {\n            signinElements.customerPage.uploadfiles().attachFile('testPicture.png', {\n              subjectType: 'drag-n-drop'\n            }); //Validate Success Message\n            signinElements.customerPage.getsuccessmessage().invoke('text').then(function (text) {\n              expect(text).to.equals('Got it!');\n            });\n            signinElements.customerPage.getforwardbutton().click();\n            cy.url().should('include', '/legal');\n          });\n        });\n      });\n    });\n  });\n}\nsigninElements.velocitydashboard.getallctioncard().then(function (body) {\n  if (body.find('.ft-action-card-strip').length > 3) {\n    console.log(cy.get('.slick-list'));\n    cy.get('.slick-slide').eq(1).click();\n    uploadBusinessFiles();\n  } else {\n    cy.log('The `About your Business` step is completed');\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.action-card-carousel-spacing`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.action-card-carousel-spacing`, but never found it.\n    at Object.getallctioncard (https://nebula-client.fundthrough.com/__cypress/tests?p=cypress/integration/nebula/TC05_start.business.js:513:19)\n    at Context.eval (https://nebula-client.fundthrough.com/__cypress/tests?p=cypress/integration/nebula/TC05_start.business.js:272:38)",
                "diff": null
              },
              "uuid": "72f49ae3-a37e-404e-8f00-c2d70611697a",
              "parentUUID": "94e7b87e-14af-4a64-9057-13b4ec52713c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "72f49ae3-a37e-404e-8f00-c2d70611697a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4357,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
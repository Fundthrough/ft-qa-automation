{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-04T18:24:08.911Z",
    "end": "2022-04-04T18:24:18.785Z",
    "duration": 9874,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bceef564-7542-414f-9c45-8eb3a80d2368",
      "title": "",
      "fullFile": "cypress/integration/nebula/TC06_funding.agreement.js",
      "file": "cypress/integration/nebula/TC06_funding.agreement.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97189e47-21aa-4616-bd78-325973b4571e",
          "title": "Review the funding agreement",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate the funding agreement review process",
              "fullTitle": "Review the funding agreement Validate the funding agreement review process",
              "timedOut": null,
              "duration": 9816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.login(this.user.username, this.user.password)\nvar signinElements = new _SigninElements[\"default\"]();\nfunction reviewAgreement() {\n  signinElements.customerPage.getforwardbutton().click(); //Business Name\n  signinElements.customerPage.getinputfield().eq(0).click();\n  signinElements.customerPage.getbusinessname().clear();\n  signinElements.customerPage.anyelement().eq(0).click(); //Validate error message\n  signinElements.customerPage.geterror().invoke('text').then(function (text) {\n    expect(text).to.eql('Invalid business name');\n  }); //Validate successful update\n  signinElements.customerPage.getbusinessname().type('Insurance'); //signinElements.customerPage.updatebutton().click()\n  //Job Title\n  signinElements.customerPage.getinputfield().eq(0).click();\n  signinElements.customerPage.getjobtitle().clear();\n  signinElements.customerPage.anyelement().eq(0).click(); //Validate error message\n  signinElements.customerPage.geterror().invoke('text').then(function (text) {\n    expect(text).to.eql('Invalid job title');\n  }); //Validate successful update\n  signinElements.customerPage.getjobtitle().type('Director'); // signinElements.customerPage.updatebutton().click()\n  //First Business tax year\n  // signinElements.customerPage.gettaxyear().type('{selectall}{backspace}')\n  // signinElements.customerPage.anyelement().eq(0).click()\n  // //Validate error message\n  // signinElements.customerPage.geterror().invoke('text').then(text => {\n  //     expect(text).to.eql('Please enter a year between 1945 and 2022')\n  // })\n  // //Validate successful update\n  // // signinElements.customerPage.gettaxyear().type('2000')\n  // // signinElements.customerPage.updatebutton().click()\n  // //Business Phone Number\n  // signinElements.customerPage.getbusinessnumber().type('{selectall}{backspace}')\n  // signinElements.customerPage.anyelement().eq(0).click()\n  // //Validate error message\n  // signinElements.customerPage.geterror().invoke('text').then(text => {\n  //     expect(text).to.eql('Please enter a valid phone number')\n  // })\n  // //Validate successful update\n  // // signinElements.customerPage.getbusinessnumber().type('649-1234-567')\n  // // signinElements.customerPage.updatebutton().click()\n  //Business Address\n  // signinElements.customerPage.getbusinessaddress().type('{selectall}{backspace}')\n  // signinElements.customerPage.anyelement().eq(0).click()\n  // //Validate error message\n  // signinElements.customerPage.geterror().invoke('text').then(text => {\n  //     expect(text).to.eql('Invalid address')\n  // })\n  // //Validate successful update\n  // signinElements.customerPage.getbusinessname().type('Insurance')\n  // signinElements.customerPage.updatebutton().click()\n  // //Business Number\n  // signinElements.customerPage.getjobtitle().type('{selectall}{backspace}')\n  // signinElements.customerPage.anyelement().eq(0).click()\n  // //Validate error message\n  // signinElements.customerPage.geterror().invoke('text').then(text => {\n  //     expect(text).to.eql('Invalid business name')\n  // })\n  // //Validate successful update\n  // signinElements.customerPage.getbusinessname().type('Insurance')\n  // signinElements.customerPage.updatebutton().click()\n  //Legal Name\n  signinElements.customerPage.getinputfield().eq(1).click();\n  signinElements.customerPage.getfirstname().clear();\n  signinElements.customerPage.anyelement().eq(0).click();\n  signinElements.customerPage.geterror().invoke('text').then(function (text) {\n    expect(text).to.equals('Invalid First Name');\n  });\n  signinElements.customerPage.getlastname().clear();\n  signinElements.customerPage.anyelement().eq(0).click();\n  signinElements.customerPage.geterror().eq(1).invoke('text').then(function (text) {\n    expect(text).to.equals('Invalid Last Name');\n  }); // signinElements.customerPage.anyelement().eq(0).click()\n  //Validate error message\n  // signinElements.customerPage.geterror().invoke('text').each((text,index) => {\n  //     expect(text[index]).to.eql('Invalid First Name')\n  //     expect(text[index]).to.eql('Invalid Last Name')\n  // })\n  // //Validate successful update\n  // signinElements.customerPage.getbusinessname().type('Insurance')\n  // signinElements.customerPage.updatebutton().click()\n  // //Checkbox Business Address\n  // signinElements.customerPage.getjobtitle().type('{selectall}{backspace}')\n  // signinElements.customerPage.anyelement().eq(0).click()\n  // //Validate error message\n  // signinElements.customerPage.geterror().invoke('text').then(text => {\n  //     expect(text).to.eql('Invalid business name')\n  // })\n  // //Validate successful update\n  // signinElements.customerPage.getbusinessname().type('Insurance')\n  // signinElements.customerPage.updatebutton().click()\n}\nsigninElements.velocitydashboard.getallctioncard().then(function (body) {\n  if (body.find('.ft-action-card-strip').length >= 3) {\n    cy.get('.slick-slide').eq(2).click();\n    reviewAgreement();\n  } else {\n    cy.log('The Funding Agreement Review step is completed');\n  }\n});",
              "err": {},
              "uuid": "e91876e3-26fa-4fc4-a549-4efd4b5343bc",
              "parentUUID": "97189e47-21aa-4616-bd78-325973b4571e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e91876e3-26fa-4fc4-a549-4efd4b5343bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9816,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}